<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiCatalogoJogos</name>
    </assembly>
    <members>
        <member name="P:ApiCatalogoJogos.Business.Entities.EntityBase.Id">
            <summary>
            Id da entidade
            </summary>
        </member>
        <member name="P:ApiCatalogoJogos.Business.Entities.EntityBase.Nome">
            <summary>
            Nome da entidade
            </summary>
        </member>
        <member name="P:ApiCatalogoJogos.Business.Entities.Jogo.Ano">
            <summary>
            Ano de lançamento do jogo (-1: não definido)
            </summary>
        </member>
        <member name="P:ApiCatalogoJogos.Business.Entities.Jogo.ProdutoraId">
            <summary>
            Id da Produtora do jogo
            </summary>
        </member>
        <member name="P:ApiCatalogoJogos.Business.Entities.Jogo.Produtora">
            <summary>
            Produtora do jogo
            </summary>
        </member>
        <member name="P:ApiCatalogoJogos.Business.Entities.Produtora.ISOPais">
            <summary>
            ISO de dois caracteres do país de origem da produtora
            </summary>
        </member>
        <member name="P:ApiCatalogoJogos.Business.Entities.Produtora.ProdutoraMae">
            <summary>
            Produtora mãe da produtora
            </summary>
        </member>
        <member name="T:ApiCatalogoJogos.Business.Exceptions.EntidadeJaCadastradaException">
            <summary>
            Utilizada quando existe conflito entre nova entidade e entidade já cadastrada
            </summary>
        </member>
        <member name="T:ApiCatalogoJogos.Business.Exceptions.EntidadeNaoCadastradaException">
            <summary>
            Utilizada quando entidade buscada não está cadastrada
            </summary>
        </member>
        <member name="T:ApiCatalogoJogos.Business.Exceptions.PaisInexistenteException">
            <summary>
            Utilizada quando a validação de um ISO de país falha
            </summary>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IProdutoraRepository.ObterFilhas(System.Guid)">
            <summary>
            Obtém produtoras filhas do contexto a partir do Id da produtora mãe
            </summary>
            <param name="id">Id da produtora mãe</param>
            <returns></returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IProdutoraRepository.ObterJogos(System.Guid)">
            <summary>
            Obtém jogos produzidos pela produtora
            </summary>
            <param name="id">Id da produtora</param>
            <returns>Lista de jogos obtidos</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IProdutoraRepository.AdicionarFilha(ApiCatalogoJogos.Business.Entities.Produtora,ApiCatalogoJogos.Business.Entities.Produtora)">
            <summary>
            Adicionar produtora filha a produtora no contexto
            </summary>
            <param name="mae">Id da produtora mãe</param>
            <param name="filha">Id da produtora filha</param>
            <returns>Dados atualizados da rodutora mãe</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Obter(System.Int32,System.Int32)">
            <summary>
            Obtém uma determinada quantidade de entidades do contexto a partir de um offset
            </summary>
            <param name="pagina">Offset (1 = nenhum offset)</param>
            <param name="quantidade">Quantidade de entidades por página</param>
            <returns>Lista das entidades obtidas</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Obter(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Obtém entidades que respeitam uma lista de parametros
            </summary>
            <param name="ps">Lista dos parametros que devem ser validados (nome, valor)</param>
            <returns>Entidades obtidas</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Obter``1(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Obtém entidades de um tipo possivelmente diferente de <c>T</c> que respeitam uma lista de parametros
            </summary>
            <typeparam name="TExternal">Tipo das entidade a serem obtidas</typeparam>
            <param name="ps">Lista dos parametros que devem ser validados (nome, valor)</param>
            <returns>Entidades obtidas</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Obter(System.Guid)">
            <summary>
            Obtém entidade do contexto pelo seu Id
            </summary>
            <param name="id">Id da entidade a ser obtida</param>
            <returns>Entidade obtida</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Inserir(`0)">
            <summary>
            Insere entidade no contexto
            </summary>
            <param name="entidade">Entidade a ser inserida</param>
            <returns>Entidade inserida</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Atualizar(`0)">
            <summary>
            Atualiza todos os dados de uma produtora no contexto
            </summary>
            <param name="entidade">Novos dados da produtora</param>
            <returns>Entidade atualizada</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Repositories.IRepositoryBase`1.Remover(System.Guid)">
            <summary>
            Remove entidade do contexto
            </summary>
            <param name="id">Id da entidade a ser removida</param>
            <returns></returns>
        </member>
        <member name="T:ApiCatalogoJogos.Business.Services.IServiceBase`2">
            <summary>
            Contrato para classe que gerencia operações no repositório utilizando Models
            </summary>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Services.IServiceBase`2.Obter(System.Int32,System.Int32)">
            <summary>
            Obtém uma quantidade definida de ViewModels de entidades a partir de um offset
            </summary>
            <param name="pagina">Offset (1 = nenhum offset)</param>
            <param name="quantidade">Quantidade de ViewModels por página</param>
            <returns>Lista das ViewModels obtidas</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Services.IServiceBase`2.Obter(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Obtém ViewModels das entidades que respeitam uma lista de parâmetros
            </summary>
            <param name="list">Lista de parâmetros a serem validados</param>
            <returns>Lista das ViewModels obtidas</returns>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Services.IServiceBase`2.Obter(System.Guid)">
            <summary>
            Obtém ViewModel de entidade do respositório pelo Id
            </summary>
            <param name="id">Id da entidade a ser obtida</param>
            <returns>ViewModel obtida</returns>
            <exception cref="T:ApiCatalogoJogos.Business.Exceptions.EntidadeNaoCadastradaException">Se não existe uma entidade cadastrada com esse id</exception>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Services.IServiceBase`2.Inserir(`0)">
            <summary>
            Insere entidade no repositório a partir de uma InputModel
            </summary>
            <param name="inputModel">InputModel da entidade a ser inserida</param>
            <returns>ViewModel da entidade inserida</returns>
            <exception cref="T:ApiCatalogoJogos.Business.Exceptions.EntidadeJaCadastradaException">Se existe um entidade conflitante já cadastrada</exception>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Services.IServiceBase`2.Atualizar(System.Guid,`0)">
            <summary>
            Atualiza todos os dados de uma entidade cadastrada para os dados de uma InputModel
            </summary>
            <param name="id">Id do entidade a ser atualizado</param>
            <param name="inputModel">InputModel com novos dados para a entidade</param>
            <returns>ViewModel da entidade atualizada</returns>
            <exception cref="T:ApiCatalogoJogos.Business.Exceptions.EntidadeNaoCadastradaException">Se não existe uma entidade com esse id cadastrada</exception>
        </member>
        <member name="M:ApiCatalogoJogos.Business.Services.IServiceBase`2.Remover(System.Guid)">
            <summary>
            Remove entidade do repositório
            </summary>
            <param name="id">Id da entidade a ser removida</param>
            <returns></returns>
            <exception cref="T:ApiCatalogoJogos.Business.Exceptions.EntidadeNaoCadastradaException">Se não existe uma entidade com esse id cadastrada</exception>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.JogoController.Obter(System.Int32,System.Int32)">
            <summary>
            Obtém uma lista de jogos com uma quantidade e offset definidos
            </summary>
            <param name="pagina">Define o offset</param>
            <param name="quantidade">Define a quantidade em cada pagina</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.JogoController.Obter(System.Guid)">
            <summary>
            Obtém jogo a partir de seu Id
            </summary>
            <param name="id">Id do jogo</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.JogoController.Inserir(ApiCatalogoJogos.Infrastructure.Model.InputModel.JogoInputModel)">
            <summary>
            Insere novo jogo
            </summary>
            <param name="jogoInputModel">Jogo a ser inserido</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.JogoController.Atualizar(System.Guid,ApiCatalogoJogos.Infrastructure.Model.InputModel.JogoInputModel)">
            <summary>
            Atualiza todos os campos de um jogo
            </summary>
            <param name="id">Id do jogo a ser atualizado</param>
            <param name="jogoInputModel">Jogo com novas características cofiguradas</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.JogoController.Remover(System.Guid)">
            <summary>
            Remove jogo
            </summary>
            <param name="id">Id do jogo a ser removido</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.ProdutoraController.Obter(System.Int32,System.Int32)">
            <summary>
            Obtém uma lista de produtoras com uma quantidade e offset definidos
            </summary>
            <param name="pagina">Define o offset</param>
            <param name="quantidade">Define a quantidade em cada pagina</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.ProdutoraController.Obter(System.String)">
            <summary>
            Obtém todas as produtoras de um país de origem
            </summary>
            <param name="isoPais">Nome do país de origem</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.ProdutoraController.Obter(System.Guid)">
            <summary>
            Obtém produtora a partir de seu Id
            </summary>
            <param name="id">Id da produtora</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.ProdutoraController.Inserir(ApiCatalogoJogos.Infrastructure.Model.InputModel.ProdutoraInputModel)">
            <summary>
            Insere nova produtora
            </summary>
            <param name="produtoraInput">Produtora a ser inserida</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.ProdutoraController.Atualizar(System.Guid,ApiCatalogoJogos.Infrastructure.Model.InputModel.ProdutoraInputModel)">
            <summary>
            Atualiza todos os campos de uma produtora
            </summary>
            <param name="id">Id da produtora a ser atualizada</param>
            <param name="produtoraInput">Produtora com as novas características configuradas</param>
        </member>
        <member name="M:ApiCatalogoJogos.Controllers.v1.ProdutoraController.Remover(System.Guid)">
            <summary>
            Remove produtora
            </summary>
            <param name="id">Id da produtora a ser removida</param>
        </member>
    </members>
</doc>
